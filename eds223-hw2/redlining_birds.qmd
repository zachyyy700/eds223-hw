---
title: "Homework 2: Redlining & Environmental Injustice"
format: html
editor: source
execute: 
  warning: false
  message: false
  cache: true
---

```{r}
# Load packages & set ggplot theme
library(tidyverse)
library(sf)
library(tmap)
library(kableExtra)
library(patchwork)
theme_set(theme_light())
```

```{r}
# Load data
ejscreen <- st_read(here::here('data', 'ejscreen', 'EJSCREEN_2023_BG_StatePct_with_AS_CNMI_GU_VI.gdb'))

holc <- st_read(here::here('data','mapping-inequality' ,'mapping-inequality-los-angeles.json')) |> 
  st_make_valid() # Make invalid geometries valid

birds <- st_read(here::here('data', 'gbif-birds-LA', 'gbif-birds-LA.shp'))
```

```{r}
# Filter ejscreen data to LA county
la_county <- ejscreen |> 
  filter(CNTY_NAME %in% c("Los Angeles County")) |> 
  filter(AREALAND != 0) |> # Exclude water bodies 
  st_transform(crs = 4326) # Transform to EPSG:4326 crs
```

# Part 1: Redlining & Environmental Justice

## 1.1 Map of HOLC redline grades
```{r}
colors <- c("#90be6d", "#277da1", "#f9c74f", "#f94144")
```

```{r, fig.width=9, fig.height=8}
# Check for matching crs before mapping
if (st_crs(la_county) == st_crs(holc)){
  print('CRSs match')
} else {
  warning("CRSs don't match")
}

# Plot distribution of HOLC grades across LA county
tm_shape(la_county, bbox = st_bbox(holc)) +
  tm_fill(fill = "grey40", col = "grey40") +
tm_shape(holc) +
  tm_fill(fill = 'grade',
          fill.scale = tm_scale(values = colors),
          fill.legend = tm_legend(title = "Grade", position = c("top", "right"))) +
tm_title(text = "HOLC Grades Across LA County") +
tm_compass(type = "4star", position = c("bottom", "right")) +
tm_scalebar(position = c("bottom", "right"), text.size = 0.7) +
tm_layout(bg.color = "#78d5d7")
```

## 1.2 Table of Percentage of Census block group in each HOLC grade
```{r}
# Join holc & la_county dfs
combined_la_holc <- st_join(x = holc, y = la_county) |> 
  st_drop_geometry() # Drop geometries

# Group & create holc summary statistics
grade_percent_df <- combined_la_holc |> 
  group_by(grade) |> 
  summarise(count = n()) |> 
  mutate(grade_percentage = round(x = (count / sum(count)) * 100, digits = 2)) |> 
  ungroup()

# Display table
kable(grade_percent_df, 
      col.names = c("Grade", "Count", "Percentage (%)"),
      caption = "Table 1. Percentage of Census Block Groups by HOLC Grade")

```

## 1.3 HOLC grades visuals
```{r}
# Group & create ejscreen summary statistics
ej_conditions_df <- combined_la_holc |> 
  group_by(grade) |> 
  summarise(lowincpct_mean = mean(LOWINCPCT) * 100,
            p_pm25_mean = mean(P_PM25),
            p_lifeexppct_mean = mean(P_LIFEEXPPCT, na.rm = TRUE))
```

```{r fig.height=7}
# Create low-income percentage plot
lowinc <- ej_conditions_df |> 
  ggplot(aes(x = grade, y = lowincpct_mean, fill = grade)) +
  scale_fill_manual(values = colors, na.value = 'grey59') +
  geom_bar(stat = 'identity', show.legend = FALSE) +
  labs(x = "Grade",
       y = "Percent Low Income Mean (%)",
       tag = "A")

# Create pm2.5 plot
pm25 <- ej_conditions_df |> 
  ggplot(aes(x = grade, y = p_pm25_mean, fill = grade)) +
  scale_fill_manual(values = colors, na.value = 'grey59') +
  geom_bar(stat = 'identity', show.legend = FALSE) +
  labs(x = "Grade",
       y = "Percentile PM2.5 mean",
       tag = "B")

# Create life expectancy plot
life_ex <- ej_conditions_df |> 
  ggplot(aes(x = grade, y = p_lifeexppct_mean, fill = grade)) +
  scale_fill_manual(values = colors, na.value = 'grey59') +
  geom_bar(stat = 'identity', show.legend = FALSE) +
  labs(x = "Grade",
       y = "Percentile Low Life Expectancy Mean",
       tag = "C")

# Patchwork together
lowinc / (pm25 + life_ex) & theme_light()
```

## 1.4 Summary

Comparing the means of all three variables of interest: 1. percent low income (A) 2. PM2.5 percentile (B) 3. low life expectancy percentile (C), shows a clear relationship with HOLC grade. Grade A has the lowest mean for all three variables. On the other hand, Grade D has the highest means, with a sequential increase by grade in-between Grades A-D. These relationships show that historically redlined neighborhoods face greater environmental burdens and disproportionate health disparities compared to locations with a better HOLC grade. 

# Part 2: Redlining & Bird Observations

## 2.1 Bird Observations per HOLC grade
```{r}
# Check for matching crs for joining
if (st_crs(holc) == st_crs(birds)){
  print('CRSs match')
} else {
  warning("CRSs don't match")
}

# Spatially join holc & birds df
holc_birds <- st_join(holc, birds)
```

```{r}
# Create dataframe of birds summary statistics
bird_percent_df <- holc_birds |> 
  group_by(grade) |> 
  summarise(bird_obs_count = n()) |>
  mutate(bird_obs_perc = (bird_obs_count / sum(bird_obs_count)) * 100) |> 
  st_drop_geometry()
```

```{r}
# Create barplot of bird observations percent by grade
ggplot(bird_percent_df, aes(x = grade, y = bird_obs_perc, fill = grade)) +
  scale_fill_manual(values = colors, na.value = 'grey59') +
  geom_bar(stat = 'identity', show.legend = FALSE) +
  labs(title = "Percentage of Total Bird Observations by Grade",
       x = "Grade",
       y = "Percentage (%)") 
```

## 2.2 Summary

The bar plot above shows that Grade C locations contain the most bird observations by percentage. However, the results of Ellis-Soto et al. 2023 show that locations with a Grade A rating have the highest number of bird observations per kilometer squared when accounting for sampling density. In the methods section of Ellis-Soto et al. 2023, it is stated that the total area of each HOLC grade was calculated and then used to calculate how bird observations differed across grades. Without considering the amount of total area for each grade, grades that cover more area (Grade C) would appear to have the majority of bird observations. Factoring in sample density per area adjusts observation counts relative to area so that larger areas don't disproportionately affect the results. 

```{r}
holc_birds |> 
  group_by(grade) |> 
  summarise(total_area_km2 = as.numeric(sum(st_area(geometry)) / 1e6)) |> 
  
  ggplot(aes(grade, total_area_km2, fill = grade)) +
  scale_fill_manual(values = colors, na.value = 'grey59') +
  geom_bar(stat = "identity", show.legend = FALSE) 
```

